{"version":3,"sources":["images/userAvatarA.png","images/userAvatarB.png","images/userAvatarC.png","images/icons/Arrow.svg","images/icons/ToTheMoon.svg","images/icons/Safety.svg","images/icons/TickTock.svg","images/ArticleIMG.png","Components/ContextAPI/Info.js","Components/ThemeTrigger/ThemeTrigger.js","Components/CustomHooks/useWindowSize.js","Components/HeaderComponent/ParticlesComponent/ParticlesComponent.js","Components/HeaderComponent/HeaderComponentTitle.js","Components/HeaderComponent/TryItButton.js","Components/HeaderComponent/HeaderComponent.js","Components/OurAdvantages/AdvantagesData.js","Components/OurAdvantages/AdvantageItem.jsx","Components/OurAdvantages/OurAdvantages.jsx","Components/CharComponent/CharComponent.jsx","Components/HowItWorks/HowItWorksText.js","Components/HowItWorks/HowItWorksImage.js","Components/HowItWorks/HowItWorks.js","Components/MiningPlan/MiningPlanItem.js","Components/MiningPlan/MiningPlan.js","Components/SliderComponent/GliderItem.js","Components/SliderComponent/SliderComponent.js","Components/ClientsReviews/ClientsReviews.js","Components/ContactForm/FormTextContent.jsx","Components/ContactForm/FormForUser.jsx","Components/ContactForm/ContactForm.js","Components/LightApp/LightApp.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","React","createContext","Consumer","Provider","Info","state","lightTheme","ScrollbarPosition","miningPlanData","name","currencyValue","currencyType","hashRate","price","period","TriggerMethod","_this","setState","ChangeTryItClicked","window","scrollTo","top","document","body","clientHeight","behavior","react_default","a","createElement","value","this","props","children","Component","TriggerBox","_ref","Object","objectWithoutProperties","renderprops","springStyle","onClick","className","style","ThemeTrigger","_useState","useState","innerWidth","_useState2","slicedToArray","width","setWidth","useEffect","ContextAPI_Info","ThemeTrigger_TriggerBox","to","marginLeft","backgroundColor","leave","useWindowSize","isClient","getSize","undefined","height","innerHeight","windowSize","setWindowSize","handleResize","addEventListener","removeEventListener","ParticlesCustomStyle","background","position","left","zIndex","ParticlesComponent","size","particlesColor","setParticlesColor","particles_default","params","particles","number","color","random","line_linked","enable_auto","opacity","retina_detect","HeaderComponentTitle","TryItButton","context","src","Arrow","alt","HeaderComponent","HeaderComponent_ParticlesComponent_ParticlesComponent","HeaderComponent_HeaderComponentTitle","HeaderComponent_TryItButton","AdvantagesData","img","ToTheMoon","title","text","SafetyIcon","TickTock","AdvantageItem","item","i","toAnimate","setToAnimate","springShow","useSpring","from","delay","config","duration","visibility_sensor_default","onChange","isVisible","web","section","OurAdvantages","map","OurAdvantages_AdvantageItem","key","CharComponent","springConfig","span","HowItWorksText","arrParagraph","Array","arrTitle","partialVisibility","Components_CharComponent_CharComponent","HowItWorksImage","springSetup","ArticleIMG","HowItWorks","HowItWorks_HowItWorksText","HowItWorks_HowItWorksImage","MiningPlanItem","springConf","MiningPlan","Fragment","MiningPlan_MiningPlanItem","GliderItem","review","clientPhoto","clientName","clientJob","SliderData","userAvatarA","userAvatarB","userAvatarC","getGiderConfig","_ref2","slidesToShow","slidesToScroll","draggable","itemWidth","SliderComponent","lib_default","hasDots","settings","SliderComponent_GliderItem","ClientsReviews","arr","Components_SliderComponent_SliderComponent","FormTextContent","arrHeader","FormForUser","form","type","defaultValue","ContactForm","ContactForm_FormTextContent","ContactForm_FormForUser","LightApp","react","Components_HeaderComponent_HeaderComponent","Components_OurAdvantages_OurAdvantages","Components_HowItWorks_HowItWorks","Components_MiningPlan_MiningPlan","Components_ClientsReviews_ClientsReviews","Components_ContactForm_ContactForm","App","react_router_dom","Info_Info","react_router","path","render","Components_ThemeTrigger_ThemeTrigger","Components_LightApp_LightApp","Boolean","location","hostname","match","ReactDOM","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,4DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,4DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,4DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,0DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,uDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,yDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,8OCCJC,IAAMC,gBAA5BC,aAAUC,aAElBC,6MACFC,MAAQ,CACJC,YAAY,EACZC,mBAAmB,EAEnBC,eAAgB,CACZ,CACIC,KAAM,SACNC,cAAe,EACfC,aAAc,0BACdC,SAAU,WACVC,MAAO,QACPC,OAAQ,YAEZ,CACIL,KAAM,SACNC,cAAe,EACfC,aAAc,0BACdC,SAAU,WACVC,MAAO,QACPC,OAAQ,aAEZ,CACIL,KAAM,OACNC,cAAe,GACfC,aAAc,0BACdC,SAAU,UACVC,MAAO,UACPC,OAAQ,iBAKpBC,cAAgB,WACZC,EAAKC,SAAS,CACVX,YAAaU,EAAKX,MAAMC,gBAIhCY,mBAAqB,WACjBC,OAAOC,SAAS,CACZC,IAAKC,SAASC,KAAKC,aACnBC,SAAU,oFAKd,OACIC,EAAAC,EAAAC,cAACzB,EAAD,CACI0B,MAAS,CACLvB,WAAYwB,KAAKzB,MAAMC,WACvBE,eAAgBsB,KAAKzB,MAAMG,eAC3BD,kBAAmBuB,KAAKzB,MAAME,kBAC9BQ,cAAee,KAAKf,cACpBG,mBAAoBY,KAAKZ,qBAE5BY,KAAKC,MAAMC,iBAxDTC,aA+DJ/B,2BCMTgC,EAAa,SAAAC,GAA+B,IAA7BpB,EAA6BoB,EAA7BpB,cAAkBgB,EAAWK,OAAAC,EAAA,EAAAD,CAAAD,EAAA,mBAC9C,OACIT,EAAAC,EAAAC,cAACU,EAAA,OAAWP,EACP,SAAAQ,GAAW,OACRb,EAAAC,EAAAC,cAAA,WAASY,QAAWzB,EAAgB0B,UAAY,gBAC5Cf,EAAAC,EAAAC,cAAA,WAASc,MAASH,EAAaE,UAAU,sBAO9CE,EA/EQ,WAAM,IAAAC,EACCC,mBAAS1B,OAAO2B,YADjBC,EAAAX,OAAAY,EAAA,EAAAZ,CAAAQ,EAAA,GAClBK,EADkBF,EAAA,GACXG,EADWH,EAAA,GAKzB,OAFAI,oBAAW,kBAAMD,EAAS/B,OAAO2B,cAG7BpB,EAAAC,EAAAC,cAACwB,EAAD,KACC,SAAAvB,GAAK,OACFoB,GAAS,IACLvB,EAAAC,EAAAC,cAACyB,EAAD,CACItC,cAAiBc,EAAMd,cACvBuC,GAAOzB,EAAMvB,WACT,CACIiD,WAAY,EACZC,gBAAiB,2BAGrB,CACID,WAAY,GACZC,gBAAiB,6BAKzBC,MAAU5B,EAAMvB,WACZ,CACIiD,WAAY,EACZC,gBAAiB,2BAGrB,CACID,WAAY,GACZC,gBAAiB,+BAK7B9B,EAAAC,EAAAC,cAACyB,EAAD,CACItC,cAAiBc,EAAMd,cACvBuC,GAAOzB,EAAMvB,WACT,CACIiD,WAAY,EACZC,gBAAiB,2BAGrB,CACID,WAAY,GACZC,gBAAiB,6BAGzBC,MAAU5B,EAAMvB,WACZ,CACIiD,WAAY,EACZC,gBAAiB,2BAGrB,CACID,WAAY,GACZC,gBAAiB,mDClC9BE,MA3Bf,WACI,IAAMC,EAA6B,kBAAXxC,OAExB,SAASyC,IACL,MAAO,CACHX,MAAOU,EAAWxC,OAAO2B,gBAAae,EACtCC,OAAQH,EAAWxC,OAAO4C,iBAAcF,GAN3B,IAAAjB,EAUeC,mBAASe,GAVxBb,EAAAX,OAAAY,EAAA,EAAAZ,CAAAQ,EAAA,GAUdoB,EAVcjB,EAAA,GAUFkB,EAVElB,EAAA,GAwBrB,OAZAI,oBAAU,WACN,IAAKQ,EAAW,OAAO,EAEvB,SAASO,IACLD,EAAcL,KAKlB,OAFAzC,OAAOgD,iBAAiB,SAAUD,GAE3B,kBAAM/C,OAAOiD,oBAAoB,SAAUF,KACnD,IAEIF,GCuBLK,EAAuB,CACzBC,WAAY,OACZC,SAAU,WACVlD,IAAK,IACLmD,KAAM,IACNC,OAAQ,MAGGC,EAjDY,SAAAvC,GAA8B,IAA3BH,EAA2BG,EAA3BH,SAAU1B,EAAiB6B,EAAjB7B,WAC9BqE,EAAOjB,IADwCd,EAETC,mBAASvC,EAAa,UAAY,WAFzByC,EAAAX,OAAAY,EAAA,EAAAZ,CAAAQ,EAAA,GAE9CgC,EAF8C7B,EAAA,GAE9B8B,EAF8B9B,EAAA,GAQrD,OAJAI,oBAAW,WACP0B,EAAkBvE,EAAa,UAAY,aAI5CoB,EAAAC,EAAAC,cAAA,WAASa,UAAY,mBAChBf,EAAAC,EAAAC,cAACkD,EAAAnD,EAAD,CACIsB,MAAS0B,EAAK1B,MACda,OAAUa,EAAKb,OACfpB,MAAS2B,EACTU,OAAU,CACNC,UAAW,CACPC,OAAQ,CACJpD,MAAO8C,EAAK1B,OAAS,KAAS0B,EAAKb,OAASa,EAAK1B,OAAS,GAAM,KAEpEiC,MAAO,CACHrD,MAAO+C,GAEXD,KAAM,CACF9C,MAAO,EACPsD,QAAQ,GAEZC,YAAa,CACTC,aAAa,EACbH,MAAON,EACPU,QAAS,IACTrC,MAAO,MAGfsC,eAAe,KAGrBvD,ICtCCwD,EAJc,kBACzB9D,EAAAC,EAAAC,cAAA,MAAIa,UAAY,wBAAhB,yCCgBWgD,EAXK,kBAChB/D,EAAAC,EAAAC,cAACwB,EAAD,KACK,SAAAsC,GAAO,OACJhE,EAAAC,EAAAC,cAAA,WAASa,UAAY,eACjBf,EAAAC,EAAAC,cAAA,MAAIY,QAAWkD,EAAQxE,mBAAoBuB,UAAY,mBAAvD,kBACAf,EAAAC,EAAAC,cAAA,OAAKa,UAAY,iBAAiBkD,IAAOC,IAAOC,IAAI,UCYrDC,EAbS,kBACpBpE,EAAAC,EAAAC,cAACwB,EAAD,KAEQ,SAAAsC,GAAO,OACHhE,EAAAC,EAAAC,cAACmE,EAAD,CAAoBzF,WAAcoF,EAAQpF,YACtCoB,EAAAC,EAAAC,cAACoE,EAAD,MACAtE,EAAAC,EAAAC,cAACqE,EAAD,6DCOLC,EArBQ,CACnB,CACIC,IAAKC,IACLC,MAAK,gBACLC,KAAI,kFAGR,CACIH,IAAKI,IACLF,MAAK,UACLC,KAAI,sFAGR,CACIH,IAAKK,IACLH,MAAK,aACLC,KAAI,8HCmBGG,EAjCO,SAAAtE,GAAe,IAAbuE,EAAavE,EAAbuE,KAAMC,EAAOxE,EAAPwE,EAAO/D,EAECC,oBAAS,GAFVE,EAAAX,OAAAY,EAAA,EAAAZ,CAAAQ,EAAA,GAE1BgE,EAF0B7D,EAAA,GAEf8D,EAFe9D,EAAA,GAU3B+D,EAAaC,YAAU,CACzBC,KAAM,CAAC1B,QAASsB,EAAY,EAAI,GAChCtD,GAAI,CAACgC,QAASsB,EAAY,EAAI,GAC9BK,MAAOL,EAAkB,IAAJD,EAAW,EAChCO,OAAQ,CAACC,SAAU,OAGvB,OACIzF,EAAAC,EAAAC,cAACwF,EAAAzF,EAAD,CAAkB0F,SAbE,SAACC,GACKT,OAAZhD,IAAdyD,GAA6DA,KAazD5F,EAAAC,EAAAC,cAAC2F,EAAA,EAASC,QAAV,CAAkB9E,MAASoE,EAAYrE,UAAY,iBAC/Cf,EAAAC,EAAAC,cAAA,OAAKa,UAAY,0BACbf,EAAAC,EAAAC,cAAA,OAAK+D,IAAOe,EAAKP,IAAKN,IAAM,MAAMpD,UAAU,uBAGhDf,EAAAC,EAAAC,cAAA,OAAKa,UAAY,oBACbf,EAAAC,EAAAC,cAAA,MAAIa,UAAY,kBAAkBT,SAAY0E,EAAKL,QACnD3E,EAAAC,EAAAC,cAAA,KAAGa,UAAY,qBAAqBT,SAAY0E,EAAKJ,WCX1DmB,EAbO,kBAClB/F,EAAAC,EAAAC,cAAA,WAASa,UAAY,iBAChByD,EAAewB,IACZ,SAAChB,EAAMC,GAAP,OACIjF,EAAAC,EAAAC,cAAC+F,EAAD,CACIC,IAAOjB,EACPD,KAAQA,EACRC,EAAKA,QCMVkB,EAhBO,SAAA1F,GAA0B,IAAxBuE,EAAwBvE,EAAxBuE,KAAMC,EAAkBxE,EAAlBwE,EAAGC,EAAezE,EAAfyE,UAEvBkB,EAAef,YAAU,CAC3BC,KAAM,CAAC1B,QAASsB,EAAY,EAAI,GAChCtD,GAAI,CAACgC,QAASsB,EAAY,EAAI,GAC9BK,MAAOL,EAAiB,EAAJD,EAAS,EAC7BO,OAAQ,CAACC,SAAU,MAGvB,OACIzF,EAAAC,EAAAC,cAAC2F,EAAA,EAASQ,KAAV,CAAerF,MAASoF,GACnBpB,IC8CEsB,EA7CQ,WAAM,IAAApF,EACSC,oBAAS,GADlBE,EAAAX,OAAAY,EAAA,EAAAZ,CAAAQ,EAAA,GAClBgE,EADkB7D,EAAA,GACP8D,EADO9D,EAAA,GASnBkF,EAAeC,MAAMlB,KAhBlB,qeAiBHmB,EAAWD,MAAMlB,KAlBlB,iBAoBL,OACItF,EAAAC,EAAAC,cAACwF,EAAAzF,EAAD,CAAkB0F,SATF,SAACC,GAAD,OACUT,OAAZhD,IAAdyD,GAA6DA,IAQlBc,mBAAqB,GAC5D1G,EAAAC,EAAAC,cAAA,WAASa,UAAY,kBAEjBf,EAAAC,EAAAC,cAAA,MAAIa,UAAU,mBACT0F,EAAST,IACN,SAAChB,EAAMC,GAAP,OACIjF,EAAAC,EAAAC,cAACyG,EAAD,CACIT,IAAOjB,EACPD,KAAQA,EACRC,EAAKA,EACLC,UAAaA,OAK7BlF,EAAAC,EAAAC,cAAA,OAAKa,UAAY,uBACZwF,EAAaP,IACV,SAAChB,EAAMC,GAAP,OACIjF,EAAAC,EAAAC,cAACyG,EAAD,CACIT,IAAOjB,EACPD,KAAQA,EACRC,EAAKA,EACLC,UAAaA,2BCD9B0B,EAvCS,WAAM,IAAA1F,EACQC,oBAAS,GADjBE,EAAAX,OAAAY,EAAA,EAAAZ,CAAAQ,EAAA,GACnBgE,EADmB7D,EAAA,GACR8D,EADQ9D,EAAA,GASpBwF,EAAcxB,YAAU,CAC1BC,KAAM,CAAC1B,QAASsB,EAAY,EAAI,GAChCtD,GAAI,CAACgC,QAASsB,EAAY,EAAI,GAC9BM,OAAQ,CAACC,SAAU,MAGvB,OACIzF,EAAAC,EAAAC,cAACwF,EAAAzF,EAAD,CAAkB0F,SAZF,SAACC,GAAD,OACUT,OAAZhD,IAAdyD,GAA6DA,IAWlBc,mBAAqB,GAC5D1G,EAAAC,EAAAC,cAAA,WAASa,UAAY,sBACjBf,EAAAC,EAAAC,cAACwB,EAAD,KAEQ,SAAAsC,GAAO,OACHhE,EAAAC,EAAAC,cAAC2F,EAAA,EAASpB,IAAV,CACIzD,MAAS6F,EACT5C,IAAO6C,IACP3C,IAAM,IACNpD,UACIiD,EAAQpF,WACJ,kBAEA,6BCpBzBmI,EAZI,WAAM,IACdxF,EAASS,IAATT,MAEP,OACIvB,EAAAC,EAAAC,cAAA,WAASa,UAAY,qBACjBf,EAAAC,EAAAC,cAAC8G,EAAD,MAECzF,GAAS,KAAOvB,EAAAC,EAAAC,cAAC+G,EAAD,QCqDdC,EA/DQ,SAAC7G,GAAU,IASIF,EAR3BvB,EAA6EyB,EAA7EzB,WAAYG,EAAiEsB,EAAjEtB,KAAMC,EAA2DqB,EAA3DrB,cAAeC,EAA4CoB,EAA5CpB,aAAcC,EAA8BmB,EAA9BnB,SAAUC,EAAoBkB,EAApBlB,MAAOC,EAAaiB,EAAbjB,OAAQ6F,EAAK5E,EAAL4E,EADjD/D,EAGIC,oBAAS,GAHbE,EAAAX,OAAAY,EAAA,EAAAZ,CAAAQ,EAAA,GAGvBgE,EAHuB7D,EAAA,GAGZ8D,EAHY9D,EAAA,GAyBxB8F,EAAa9B,YAAU,CACzBC,KAAM,CAAC1B,QAASsB,EAAY,EAAI,GAChCtD,GAAI,CAACgC,QAASsB,EAAY,EAAI,GAC9BM,OAAQ,CAACC,SAAU,KACnBF,MAAOL,EAAiB,IAAJD,EAAW,IAGnC,OACIjF,EAAAC,EAAAC,cAACwF,EAAAzF,EAAD,CAAkByG,mBAAqB,EAAMf,SA5B7B,SAACC,GAAD,OACUT,OAAZhD,IAAdyD,GAA6DA,KA4BzD5F,EAAAC,EAAAC,cAAC2F,EAAA,EAASC,QAAV,CAAkB9E,MAASmG,EACvBpG,UACInC,EAAa,iBAAmB,qCAGpCoB,EAAAC,EAAAC,cAAA,MAAIa,UAAU,cAAchC,GAE3BiB,EAAAC,EAAAC,cAAA,KAAGa,UAAU,qBACVf,EAAAC,EAAAC,cAAA,QAAMa,WAjCYZ,EAiC0BnB,EAhCrDmB,GAAS,GAAKA,EAAQ,EACd,mBAEHA,GAAS,GAAKA,EAAQ,GACnB,sBAEHA,GAAS,GACN,qBAGA,qBAuBMnB,GAGJC,GAGLe,EAAAC,EAAAC,cAAA,WAASa,UAAU,YACff,EAAAC,EAAAC,cAAA,MAAIa,UAAU,iBAAd,YACAf,EAAAC,EAAAC,cAAA,KAAGa,UAAU,iBAAiB7B,IAGlCc,EAAAC,EAAAC,cAAA,MAAIa,UAAU,eAAe5B,EAA7B,MACAa,EAAAC,EAAAC,cAAA,KAAGa,UAAU,wBAAwB3B,EAArC,KAEAY,EAAAC,EAAAC,cAAA,UAAQa,UAAcnC,EAAa,SAAW,qBAA9C,cCxBDwI,EA/BI,WACf,OACIpH,EAAAC,EAAAC,cAACwB,EAAD,KAEQ,SAAAvB,GAAK,OACDH,EAAAC,EAAAC,cAACF,EAAAC,EAAMoH,SAAP,KACIrH,EAAAC,EAAAC,cAAA,MAAIa,UAAU,6BAAd,2BAEAf,EAAAC,EAAAC,cAAA,WAASa,UAAU,cAEXZ,EAAMrB,eAAekH,IAAI,SAAChB,EAAMC,GAAP,OACrBjF,EAAAC,EAAAC,cAACoH,EAAD,CACIpB,IAAOjB,EACPA,EAAKA,EACLlG,KAAQiG,EAAKjG,KACbH,WAAgBuB,EAAMvB,WACtBI,cAAiBgG,EAAKhG,cACtBC,aAAgB+F,EAAK/F,aACrBC,SAAY8F,EAAK9F,SACjBC,MAAS6F,EAAK7F,MACdC,OAAU4F,EAAK5F,oCCExCmI,GAzBI,SAAA9G,GAAgE,IAA9D+G,EAA8D/G,EAA9D+G,OAAQC,EAAsDhH,EAAtDgH,YAAaC,EAAyCjH,EAAzCiH,WAAYC,EAA6BlH,EAA7BkH,UAAW1C,EAAkBxE,EAAlBwE,EAAGC,EAAezE,EAAfyE,UAE1D2B,EAAcxB,YAAU,CAC1BC,KAAM,CAAC1B,QAASsB,EAAY,EAAI,GAChCtD,GAAI,CAACgC,QAASsB,EAAW,EAAI,GAC7BK,MAAOL,EAAiB,IAAJD,EAAW,EAC/BO,OAAQ,CAACC,SAAU,OAGvB,OACIzF,EAAAC,EAAAC,cAAC2F,EAAA,EAASC,QAAV,CAAkB9E,MAAS6F,GACvB7G,EAAAC,EAAAC,cAAA,QAAMa,UAAY,gBAAgByG,GAElCxH,EAAAC,EAAAC,cAAA,WAASa,UAAY,iBACjBf,EAAAC,EAAAC,cAAA,OAAKa,UAAY,cAAckD,IAAOwD,EAAatD,IAAM,QAEzDnE,EAAAC,EAAAC,cAAA,WAASa,UAAY,eACjBf,EAAAC,EAAAC,cAAA,MAAIa,UAAY,cAAc2G,GAC9B1H,EAAAC,EAAAC,cAAA,QAAMa,UAAY,aAAa4G,mECL7CC,GAAa,CACf,CACIJ,OAAM,2OACNC,YAAaI,KACbH,WAAY,OACZC,UAAW,kBAEf,CACIH,OAAM,2OACNC,YAAaK,KACbJ,WAAY,YACZC,UAAW,2BAEf,CACIH,OAAM,2OACNC,YAAaM,KACbL,WAAY,OACZC,UAAW,6BAEf,CACIH,OAAM,2OACNC,YAAaI,KACbH,WAAY,OACZC,UAAW,kBAEf,CACIH,OAAM,2OACNC,YAAaK,KACbJ,WAAY,YACZC,UAAW,2BAEf,CACIH,OAAM,2OACNC,YAAaM,KACbL,WAAY,OACZC,UAAW,8BAiCbK,GAAiB,SAAAC,GAAA,MACnB,CACIC,aAFeD,EAAE1G,OAEM,IAAK,EAAI,EAChC4G,eAAgB,EAChBC,WAAW,EACXC,UAAW,MAIJC,GArCS,SAAA7H,GAAiB,IAAfyE,EAAezE,EAAfyE,UAChBjC,EAAOjB,IAEb,OACIhC,EAAAC,EAAAC,cAAA,eACIF,EAAAC,EAAAC,cAACqI,GAAAtI,EAAD,CACIuI,SAAW,EACXC,SAAUT,GAAe/E,IAGrB2E,GAAW5B,IACP,SAAChB,EAAMC,GAAP,OACIjF,EAAAC,EAAAC,cAACwI,GAAD,CACIxC,IAAOjB,EACPA,EAAKA,EACLuC,OAAUxC,EAAKwC,OACfC,YAAezC,EAAKyC,YACpBC,WAAc1C,EAAK0C,WACnBC,UAAa3C,EAAK2C,UAClBzC,UAAaA,SCtC9ByD,GA5BQ,WAAM,IAAAzH,EACSC,oBAAS,GADlBE,EAAAX,OAAAY,EAAA,EAAAZ,CAAAQ,EAAA,GAClBgE,EADkB7D,EAAA,GACP8D,EADO9D,EAAA,GAMnBuH,EAAMpC,MAAMlB,KARX,sBAUP,OACItF,EAAAC,EAAAC,cAACwF,EAAAzF,EAAD,CAAkB0F,SANF,SAACC,GAAD,OACUT,OAAZhD,IAAdyD,GAA6DA,KAMzD5F,EAAAC,EAAAC,cAAA,WAASa,UAAY,iBACjBf,EAAAC,EAAAC,cAAA,MAAIa,UAAU,uBACT6H,EAAI5C,IAAI,SAAChB,EAAMC,GAAP,OACLjF,EAAAC,EAAAC,cAACyG,EAAD,CACI3B,KAAQA,EACRkB,IAAOjB,EACPA,EAAKA,EACLC,UAAaA,OAKzBlF,EAAAC,EAAAC,cAAC2I,GAAD,CAAiB3D,UAAaA,OCO/B4D,GA/BS,SAAArI,GAAiB,IAAfmF,EAAenF,EAAfmF,UAChBmD,EAAYvC,MAAMlB,KAJZ,8BAKNmB,EAAWD,MAAMlB,KAJZ,6CAMX,OACItF,EAAAC,EAAAC,cAAAF,EAAAC,EAAAoH,SAAA,KACIrH,EAAAC,EAAAC,cAAA,MAAIa,UAAY,qBACXgI,EAAU/C,IAAI,SAAChB,EAAMC,GAAP,OACXjF,EAAAC,EAAAC,cAACyG,EAAD,CACI3B,KAAQA,EACRC,EAAKA,EACLiB,IAAOjB,EACPC,UAAaU,OAKzB5F,EAAAC,EAAAC,cAAA,KAAGa,UAAY,oBACV0F,EAAST,IAAI,SAAChB,EAAMC,GAAP,OACVjF,EAAAC,EAAAC,cAACyG,EAAD,CACI3B,KAAQA,EACRC,EAAKA,EACLiB,IAAOjB,EACPC,UAAaU,SCVtBoD,GAjBK,SAAAvI,GAAiB,IAAfmF,EAAenF,EAAfmF,UAEZuB,EAAa9B,YAAU,CACzBC,KAAM,CAAC1B,QAASgC,EAAY,EAAI,GAChChE,GAAI,CAACgC,QAASgC,EAAY,EAAI,GAC9BJ,OAAQ,CAACC,SAAUG,EAAY,IAAM,GACrCL,MAAO,IAGX,OACIvF,EAAAC,EAAAC,cAAC2F,EAAA,EAASoD,KAAV,CAAejI,MAASmG,EAAYpG,UAAY,kBAC5Cf,EAAAC,EAAAC,cAAA,SAAOgJ,KAAO,MAAMnI,UAAY,mBAAmBoI,aAAe,UAClEnJ,EAAAC,EAAAC,cAAA,UAAQgJ,KAAO,SAASnI,UAAU,qBAAlC,OCOGqI,GAfK,WAChB,OACIpJ,EAAAC,EAAAC,cAACwF,EAAAzF,EAAD,CAAkByG,mBAAqB,GAE/B,SAAAjG,GAAA,IAAEmF,EAAFnF,EAAEmF,UAAF,OACI5F,EAAAC,EAAAC,cAAA,WAASa,UAAY,eACbf,EAAAC,EAAAC,cAACmJ,GAAD,CAAiBzD,UAAaA,IAC9B5F,EAAAC,EAAAC,cAACoJ,GAAD,CAAa1D,UAAaA,QCevC2D,GArBE,SAAA9I,GAAkB,IAAhB7B,EAAgB6B,EAAhB7B,WACf,OACIoB,EAAAC,EAAAC,cAACsJ,EAAA,SAAD,KACIxJ,EAAAC,EAAAC,cAACuJ,EAAD,MAEAzJ,EAAAC,EAAAC,cAAA,WAASa,UAAanC,EAAa,MAAQ,gBAEvCoB,EAAAC,EAAAC,cAACwJ,EAAD,MAEA1J,EAAAC,EAAAC,cAACyJ,EAAD,MAEA3J,EAAAC,EAAAC,cAAC0J,EAAD,MAEA5J,EAAAC,EAAAC,cAAC2J,GAAD,MAEA7J,EAAAC,EAAAC,cAAC4J,GAAD,SCYDC,GAxBH,WACR,OACI/J,EAAAC,EAAAC,cAAC8J,EAAA,EAAD,KACIhK,EAAAC,EAAAC,cAAC+J,EAAD,KACIjK,EAAAC,EAAAC,cAACgK,EAAA,EAAD,KACIlK,EAAAC,EAAAC,cAACgK,EAAA,EAAD,CAAOC,KAAO,IAAIC,OAAW,kBACzBpK,EAAAC,EAAAC,cAACsJ,EAAA,SAAD,KACIxJ,EAAAC,EAAAC,cAACmK,EAAD,MAEArK,EAAAC,EAAAC,cAACwB,EAAD,KACM,SAAAsC,GAAO,OACLhE,EAAAC,EAAAC,cAACoK,GAAD,CACI1L,WAAcoF,EAAQpF,uBCb1C2L,QACW,cAA7B9K,OAAO+K,SAASC,UAEe,UAA7BhL,OAAO+K,SAASC,UAEhBhL,OAAO+K,SAASC,SAASC,MACvB,2DCbNC,IAASP,OAAOpK,EAAAC,EAAAC,cAAC0K,GAAD,MAAQhL,SAASiL,eAAe,SD4H1C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.56c75660.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/userAvatarA.77b83583.png\";","module.exports = __webpack_public_path__ + \"static/media/userAvatarB.047c1d56.png\";","module.exports = __webpack_public_path__ + \"static/media/userAvatarC.4758b24f.png\";","module.exports = __webpack_public_path__ + \"static/media/Arrow.e1f6c173.svg\";","module.exports = __webpack_public_path__ + \"static/media/ToTheMoon.e0ee916a.svg\";","module.exports = __webpack_public_path__ + \"static/media/Safety.f1aa827a.svg\";","module.exports = __webpack_public_path__ + \"static/media/TickTock.c8e027c7.svg\";","module.exports = __webpack_public_path__ + \"static/media/ArticleIMG.1dca46b2.png\";","import React, {Component} from 'react';\r\nexport const {Consumer, Provider} = React.createContext();\r\n\r\nclass Info extends Component{\r\n    state = {\r\n        lightTheme: true,\r\n        ScrollbarPosition: false,\r\n\r\n        miningPlanData: [\r\n            {\r\n                name: 'Bronze',\r\n                currencyValue: 3,\r\n                currencyType: 'cryptocurrencies mining',\r\n                hashRate: '500 GH/s',\r\n                price: \"49.00\",\r\n                period: \"per week\"\r\n            },\r\n            {\r\n                name: 'Silver',\r\n                currencyValue: 5,\r\n                currencyType: 'cryptocurrencies mining',\r\n                hashRate: '6.9 TH/s',\r\n                price: \"99.00\",\r\n                period: \"per month\"\r\n            },\r\n            {\r\n                name: 'Gold',\r\n                currencyValue: 10,\r\n                currencyType: 'cryptocurrencies mining',\r\n                hashRate: '13 TH/s',\r\n                price: \"1999.00\",\r\n                period: \"per month\"\r\n            }\r\n        ]\r\n    };\r\n\r\n    TriggerMethod = () =>{\r\n        this.setState({\r\n            lightTheme: !this.state.lightTheme\r\n        });\r\n    };\r\n\r\n    ChangeTryItClicked = () => {\r\n        window.scrollTo({\r\n            top: document.body.clientHeight,\r\n            behavior: 'smooth'\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Provider\r\n                value = {{\r\n                    lightTheme: this.state.lightTheme,\r\n                    miningPlanData: this.state.miningPlanData,\r\n                    ScrollbarPosition: this.state.ScrollbarPosition,\r\n                    TriggerMethod: this.TriggerMethod,\r\n                    ChangeTryItClicked: this.ChangeTryItClicked,\r\n                }}>\r\n                {this.props.children}\r\n            </Provider>\r\n        );\r\n    }\r\n}\r\n\r\nexport {Info};\r\nexport default Consumer;","import React, {useState, useEffect} from 'react';\r\n\r\nimport {Spring} from 'react-spring/renderprops';\r\nimport Consumer from '../ContextAPI/Info';\r\n\r\nconst  ThemeTrigger  = () => {\r\n    const [width, setWidth] = useState(window.innerWidth)\r\n    \r\n    useEffect (() => setWidth(window.innerWidth))\r\n\r\n    return (\r\n        <Consumer>\r\n        {value =>    \r\n            width >= 880 ?\r\n                <TriggerBox\r\n                    TriggerMethod = {value.TriggerMethod}\r\n                    to = { value.lightTheme ? \r\n                        {\r\n                            marginLeft: 0, \r\n                            backgroundColor: 'rgba(0, 194, 255, 0.75)'\r\n                        }\r\n                            :\r\n                        {\r\n                            marginLeft: 77,\r\n                            backgroundColor: 'rgba(176, 255, 222, 0.75)'\r\n                        }\r\n                    }\r\n\r\n\r\n                    leave = { value.lightTheme ?\r\n                        {\r\n                            marginLeft: 0, \r\n                            backgroundColor: 'rgba(0, 194, 255, 0.75)'\r\n                        }\r\n                            :\r\n                        {\r\n                            marginLeft: 77,\r\n                            backgroundColor: 'rgba(176, 255, 222, 0.75)'\r\n                        }\r\n                    }\r\n                />        \r\n                    : \r\n                <TriggerBox\r\n                    TriggerMethod = {value.TriggerMethod}\r\n                    to = { value.lightTheme ? \r\n                        {\r\n                            marginLeft: 0, \r\n                            backgroundColor: 'rgba(0, 194, 255, 0.75)'\r\n                        }\r\n                            :\r\n                        {\r\n                            marginLeft: 22,\r\n                            backgroundColor: 'rgba(176, 255, 222, 0.75)'\r\n                        }\r\n                    }\r\n                    leave = { value.lightTheme ?\r\n                        {   \r\n                            marginLeft: 0, \r\n                            backgroundColor: 'rgba(0, 194, 255, 0.75)'\r\n                        }\r\n                            :\r\n                        {\r\n                            marginLeft: 22,\r\n                            backgroundColor: 'rgba(176, 255, 222, 0.75)'\r\n                        }\r\n                    }\r\n                /> \r\n        }\r\n        </Consumer>\r\n    );\r\n};\r\n\r\nconst TriggerBox = ({TriggerMethod, ...props}) => {\r\n    return(\r\n        <Spring {...props}>\r\n            {springStyle => (\r\n                <section onClick = {TriggerMethod}  className = \"ThemeTrigger\">\r\n                    <section style = {springStyle} className=\"TriggerCircle\" />\r\n                </section>\r\n            )}\r\n        </Spring> \r\n    )\r\n};\r\n\r\nexport default ThemeTrigger;","import {useState, useEffect} from 'react'\r\n\r\nfunction useWindowSize() {\r\n    const isClient = typeof window === 'object';\r\n\r\n    function getSize() {\r\n        return {\r\n            width: isClient ? window.innerWidth : undefined,\r\n            height: isClient ? window.innerHeight : undefined\r\n        };\r\n    }\r\n      \r\n    const [windowSize, setWindowSize] = useState(getSize);\r\n      \r\n    useEffect(() => {\r\n        if (!isClient)  return false;\r\n        \r\n        function handleResize() {\r\n            setWindowSize(getSize());\r\n        }\r\n        \r\n        window.addEventListener('resize', handleResize);\r\n          \r\n        return () => window.removeEventListener('resize', handleResize);    \r\n    }, []); // Empty array ensures that effect is only run on mount and unmount\r\n\r\n    return windowSize;\r\n}\r\n\r\nexport default useWindowSize;","import React, { useState, useEffect } from 'react';\r\n\r\n// package\r\nimport Particles from 'react-particles-js';\r\n\r\n// custom hook\r\nimport useWindowSize from '../../CustomHooks/useWindowSize'\r\n\r\nconst ParticlesComponent = ({ children, lightTheme }) => {\r\n    const size = useWindowSize();\r\n    const [particlesColor, setParticlesColor] = useState(lightTheme ? '#2659E2' : '#B0FFDE')\r\n\r\n    useEffect (() => {\r\n        setParticlesColor(lightTheme ? '#2659E2' : '#B0FFDE')\r\n    })\r\n\r\n    return(\r\n       <section className = 'HeaderComponent'>\r\n            <Particles\r\n                width = {size.width}\r\n                height = {size.height}\r\n                style = {ParticlesCustomStyle}\r\n                params = {{\r\n                    particles: {\r\n                        number: {\r\n                            value: size.width <= 800 ?  ((size.height + size.width) / 50) : 120\r\n                        },\r\n                        color: {                        \r\n                            value: particlesColor\r\n                        },\r\n                        size: {\r\n                            value: 5,\r\n                            random: true\r\n                        },\r\n                        line_linked: {\r\n                            enable_auto: true,\r\n                            color: particlesColor,\r\n                            opacity: '1',\r\n                            width: '5'\r\n                        }\r\n                    },\r\n                    retina_detect: true\r\n                }}\r\n            />\r\n            { children }\r\n       </section>\r\n    )\r\n};\r\n\r\nconst ParticlesCustomStyle = {\r\n    background: '#000',\r\n    position: 'absolute',\r\n    top: '0',\r\n    left: '0',\r\n    zIndex: '-1'\r\n}\r\n\r\nexport default ParticlesComponent;","import React from 'react';\r\n\r\nconst HeaderComponentTitle = () => (\r\n    <h1 className = \"HeaderComponentTitle\"> Blockchain mining </h1>\r\n);\r\n\r\nexport default HeaderComponentTitle;","import React from 'react';\r\n\r\n//image:\r\nimport Arrow from '../../images/icons/Arrow.svg'\r\n\r\n//context\r\nimport Consumer from '../ContextAPI/Info'\r\n\r\nconst TryItButton = () => (\r\n    <Consumer>\r\n        {context => (\r\n            <section className = \"TryItButton\">\r\n                <h2 onClick = {context.ChangeTryItClicked} className = \"TryItButtonText\"> Try this now </h2>\r\n                <img className = \"TryItButtonImg\" src = {Arrow} alt=\">\"/>\r\n            </section>\r\n        )}\r\n    </Consumer>\r\n);\r\n\r\nexport default TryItButton;","import React from 'react';\r\n\r\n//Package:\r\nimport ParticlesComponent from './ParticlesComponent/ParticlesComponent';\r\n\r\n//Context:\r\nimport Consumer from '../ContextAPI/Info'\r\n\r\n//Components:\r\nimport HeaderComponentTitle from './HeaderComponentTitle';\r\nimport TryItButton from './TryItButton';\r\n\r\nconst HeaderComponent = () => (\r\n    <Consumer>\r\n        {\r\n            context => (\r\n                <ParticlesComponent lightTheme = {context.lightTheme}>\r\n                    <HeaderComponentTitle />   \r\n                    <TryItButton/>\r\n                </ParticlesComponent>\r\n            )\r\n        }\r\n    </Consumer>\r\n);\r\n\r\nexport default HeaderComponent;","import ToTheMoon from '../../images/icons/ToTheMoon.svg';\r\nimport SafetyIcon from '../../images/icons/Safety.svg';\r\nimport TickTock from '../../images/icons/TickTock.svg';\r\n\r\nconst AdvantagesData = [\r\n    {\r\n        img: ToTheMoon,\r\n        title: `TOO THE MOON!`,\r\n        text: `All cryptocurrencies are growing up\r\n            and you can use it right now.`\r\n    },\r\n    {\r\n        img: SafetyIcon,\r\n        title: `SAFETY!`,\r\n        text: `All your crypto money in a safe \r\n            place. No one can took it, only you.`\r\n    },\r\n    {\r\n        img: TickTock,\r\n        title: `TICK-TOCK!`,\r\n        text: `All you need for starting mining is five\r\n            minutes and three buttons. Let’s start.`\r\n    }\r\n];\r\n\r\nexport default AdvantagesData;","import React, {useState} from 'react';\r\n\r\n//packages: \r\nimport {useSpring, animated} from 'react-spring';\r\nimport VisibilitySensor from 'react-visibility-sensor';\r\n\r\nconst AdvantageItem = ({item, i}) => {\r\n    //state\r\n    const [toAnimate, setToAnimate] = useState(false);\r\n\r\n    //checks element's position:\r\n    const CheckVisibility = (isVisible) => {        \r\n        isVisible === undefined ? setToAnimate(false) : setToAnimate(isVisible)\r\n    };\r\n\r\n    //config for animations:\r\n    const springShow = useSpring({\r\n        from: {opacity: toAnimate ? 0 : 1},\r\n        to: {opacity: toAnimate ? 1 : 0},\r\n        delay: toAnimate ?  (i * 200) : 0,\r\n        config: {duration: 350}\r\n    });\r\n\r\n    return(\r\n        <VisibilitySensor onChange = {CheckVisibility}>\r\n            <animated.section style = {springShow} className = \"AdventageItem\">\r\n                <div className = 'AdventageItemIconBlock'>\r\n                    <img src = {item.img} alt = \"svg\" className=\"AdventageItemIcon\"/>\r\n                </div>\r\n\r\n                <div className = 'AdventageTextBox'>    \r\n                    <h1 className = 'AdventageHeader' children = {item.title} />    \r\n                    <p className = 'AdventageParagraph' children = {item.text}/>\r\n                </div>\r\n            </animated.section>\r\n        </VisibilitySensor>\r\n    )    \r\n};\r\n\r\nexport default AdvantageItem;","import React from 'react';\r\n\r\n//data:\r\nimport AdvantagesData from './AdvantagesData';\r\n\r\n//component:\r\nimport AdvantageItem from './AdvantageItem';\r\n\r\nconst OurAdvantages = () => (\r\n    <section className = 'OurAdvantages'>\r\n        {AdvantagesData.map( \r\n            (item, i) => \r\n                <AdvantageItem \r\n                    key = {i} \r\n                    item = {item} \r\n                    i = {i}\r\n                />\r\n        )}\r\n    </section>\r\n);\r\n\r\nexport default OurAdvantages;","import React from 'react';\r\n\r\n//package: \r\nimport {useSpring, animated} from 'react-spring';\r\n\r\nconst CharComponent = ({item, i, toAnimate}) => {\r\n    //setup for animation:\r\n    const springConfig = useSpring({\r\n        from: {opacity: toAnimate ? 0 : 1},\r\n        to: {opacity: toAnimate ? 1 : 0},\r\n        delay: toAnimate ? (i * 1) : 0,\r\n        config: {duration: 20}\r\n    });\r\n\r\n    return(\r\n        <animated.span style = {springConfig}>\r\n            {item}\r\n        </animated.span>\r\n    )\r\n};\r\n\r\nexport default CharComponent;","import React, {useState} from 'react';\r\n\r\n//package:\r\nimport VisibilitySensor from 'react-visibility-sensor';\r\n\r\n//component:\r\nimport CharComponent from '../CharComponent/CharComponent';\r\n\r\nconst\r\n    Title = `HOW IT WORKS?`,\r\n    Paragraph =\r\n        `Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et\r\n        dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex\r\n        ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat\r\n        nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit\r\n        anim id est laborum.`;\r\n\r\nconst HowItWorksText = () => {\r\n    const [toAnimate, setToAnimate] = useState(false);\r\n\r\n    //set's animation for component:\r\n    const isItVisible = (isVisible) => (\r\n        isVisible === undefined ? setToAnimate(false) : setToAnimate(isVisible)\r\n    );\r\n    \r\n    //convetring strings to arrays:\r\n    const arrParagraph = Array.from(Paragraph);\r\n    const arrTitle = Array.from(Title);\r\n\r\n    return (\r\n        <VisibilitySensor onChange = {isItVisible} partialVisibility = {true}>\r\n            <section className = \"HowItWorksText\">\r\n                \r\n                <h1 className=\"HowItWorksTitle\" >\r\n                    {arrTitle.map(\r\n                        (item ,i) => \r\n                            <CharComponent \r\n                                key = {i}\r\n                                item = {item}\r\n                                i = {i}\r\n                                toAnimate = {toAnimate}\r\n                            />\r\n                    )}                    \r\n                </h1>\r\n\r\n                <div className = \"HowItWorksParagraph\">\r\n                    {arrParagraph.map(\r\n                        (item ,i) => \r\n                            <CharComponent \r\n                                key = {i}\r\n                                item = {item}\r\n                                i = {i}\r\n                                toAnimate = {toAnimate}\r\n                            />\r\n                    )}          \r\n                </div>\r\n\r\n            </section>\r\n        </VisibilitySensor>\r\n    );\r\n};\r\n\r\nexport default HowItWorksText;","import React, {useState} from 'react'\r\n\r\n//packages:\r\nimport {useSpring, animated} from 'react-spring';\r\nimport VisibilitySensor from 'react-visibility-sensor';\r\n\r\n//context:\r\nimport Consumer from '../ContextAPI/Info';\r\n\r\n//image:\r\nimport ArticleIMG from '../../images/ArticleIMG.png';\r\n\r\nconst HowItWorksImage = () => {\r\n    const [toAnimate, setToAnimate] = useState(false);\r\n\r\n    //checks when component should be animated:\r\n    const IsItVisible = (isVisible) => (\r\n        isVisible === undefined ? setToAnimate(false) : setToAnimate(isVisible)\r\n    );\r\n\r\n    //anomation config:\r\n    const springSetup = useSpring({\r\n        from: {opacity: toAnimate ? 0 : 1},\r\n        to: {opacity: toAnimate ? 1 : 0},\r\n        config: {duration: 50}\r\n    });\r\n\r\n    return(\r\n        <VisibilitySensor onChange = {IsItVisible} partialVisibility = {true}>\r\n            <section className = \"HowItWorksImageBox\">\r\n                <Consumer>\r\n                    {\r\n                        context =>\r\n                            <animated.img\r\n                                style = {springSetup} \r\n                                src = {ArticleIMG} \r\n                                alt = \" \"\r\n                                className = {\r\n                                    context.lightTheme ? \r\n                                        \"HowItWorksImage\" \r\n                                        : \r\n                                        \"HowItWorksImageDark\"\r\n                                } \r\n                            />    \r\n                    }\r\n                </Consumer>\r\n            </section>\r\n        </VisibilitySensor>\r\n    )\r\n};\r\n\r\nexport default HowItWorksImage;","import React from 'react';\r\n\r\n//components\r\nimport HowItWorksText from './HowItWorksText';\r\nimport HowItWorksImage from './HowItWorksImage';\r\n\r\n//custom hook:\r\nimport useWindowSize from '../CustomHooks/useWindowSize';\r\n\r\nconst HowItWorks = () => {\r\n    const {width} = useWindowSize();\r\n\r\n    return(\r\n        <section className = \"HowItWorksMainBox\">\r\n            <HowItWorksText />\r\n\r\n            {width >= 880 && <HowItWorksImage />}\r\n        </section>        \r\n    )\r\n};\r\n\r\nexport default HowItWorks;","import React, {useState} from 'react';\r\n\r\n//packages:\r\nimport VisibilitySensor from 'react-visibility-sensor';\r\nimport {useSpring, animated} from 'react-spring';\r\n\r\nconst MiningPlanItem = (props) => {\r\n    const {lightTheme, name, currencyValue, currencyType, hashRate, price, period, i} = props;\r\n\r\n    const [toAnimate, setToAnimate] = useState(false);\r\n\r\n    const IsItVisible = (isVisible) => \r\n        isVisible === undefined ? setToAnimate(false) : setToAnimate(isVisible) \r\n    \r\n    //sorting currency to their classes:\r\n    const getClassForCurrencyValue = (value) => {\r\n        if(value >= 0 && value < 5) {\r\n            return 'redCurrencyValue'\r\n        }\r\n        else if(value >= 5 && value < 10) {\r\n            return 'orangeCurrencyValue'\r\n        }\r\n        else if(value >= 10) {\r\n            return 'greenCurrencyValue'\r\n        }\r\n        else {\r\n            return 'redCurrencyValue'\r\n        }\r\n    };\r\n\r\n    //animation config:\r\n    const springConf = useSpring({\r\n        from: {opacity: toAnimate ? 0 : 1},\r\n        to: {opacity: toAnimate ? 1 : 0},\r\n        config: {duration: 250},\r\n        delay: toAnimate ? (i * 200) : 0 \r\n    });\r\n\r\n    return(\r\n        <VisibilitySensor partialVisibility = {true} onChange = {IsItVisible}>\r\n            <animated.section style = {springConf} \r\n                className = {\r\n                    lightTheme ? \"MiningPlanItem\" : \"MiningPlanItem MiningPlanItemDark\"\r\n                }\r\n            >\r\n                <h3 className=\"MiningName\">{name}</h3>\r\n                \r\n                {<p className=\"MiningCurrencies \">\r\n                    <span className = {getClassForCurrencyValue(currencyValue)}>\r\n                        {currencyValue}\r\n                    </span>\r\n        \r\n                    {currencyType}\r\n                </p>}\r\n                    \r\n                <section className=\"HashRate\">\r\n                    <h4 className=\"HashRateTitle\">Hashrate</h4>\r\n                    <p className=\"HashRateValue\">{hashRate}</p>\r\n                </section>\r\n                    \r\n                <h4 className=\"MiningPrice\">{price} $</h4>\r\n                <p className=\"MiningPricePerPeriod\">{period} </p>\r\n        \r\n                <button className =  {lightTheme ? \"BuyNow\" : \"BuyNow BuyNowDark\"}>Buy now</button>\r\n            </animated.section>\r\n        </VisibilitySensor>\r\n    );\r\n};\r\n\r\nexport default MiningPlanItem;","import React from 'react';\r\n\r\n//context:\r\nimport Consumer from '../ContextAPI/Info'\r\n\r\n//component:\r\nimport MiningPlanItem from './MiningPlanItem'\r\n\r\nconst MiningPlan = () => {\r\n    return (\r\n        <Consumer>\r\n            {\r\n                value =>\r\n                    <React.Fragment>\r\n                        <h2 className=\"MiningPlanComponentHeader\">Choose your mining plan</h2>\r\n\r\n                        <section className=\"MiningPlan\">\r\n                            {\r\n                                value.miningPlanData.map((item, i) => (\r\n                                    <MiningPlanItem\r\n                                        key = {i}\r\n                                        i = {i}\r\n                                        name = {item.name}\r\n                                        lightTheme   = {value.lightTheme}\r\n                                        currencyValue = {item.currencyValue}\r\n                                        currencyType = {item.currencyType}\r\n                                        hashRate = {item.hashRate}\r\n                                        price = {item.price}\r\n                                        period = {item.period}\r\n                                    />\r\n                                ))\r\n                            }\r\n                        </section>\r\n                    </React.Fragment>   \r\n            }\r\n        </Consumer>\r\n    );\r\n};\r\n\r\nexport default MiningPlan;","import React from 'react';\r\n\r\n//package:\r\nimport {useSpring, animated} from 'react-spring';\r\n\r\nconst GliderItem = ({review, clientPhoto, clientName, clientJob, i, toAnimate}) => {\r\n    //animation setup:\r\n    const springSetup = useSpring({\r\n        from: {opacity: toAnimate ? 0 : 1},\r\n        to: {opacity: toAnimate? 1 : 0},\r\n        delay: toAnimate ? (i * 200) : 0,\r\n        config: {duration: 250}\r\n    });\r\n\r\n    return(\r\n        <animated.section style = {springSetup}>\r\n            <span className = 'clientReview'>{review}</span>\r\n    \r\n            <section className = 'clientProfile'>\r\n                <img className = 'clientPhoto' src = {clientPhoto} alt = 'img'/> \r\n    \r\n                <section className = 'clientTitle'>\r\n                    <h3 className = 'clientName'>{clientName}</h3>\r\n                    <span className = 'clientJob'>{clientJob}</span>\r\n                </section>\r\n            </section>\r\n        </animated.section>\r\n    )\r\n};\r\n\r\nexport default GliderItem;\r\n","import React from 'react';\r\n\r\n// package\r\nimport GliderComponent from 'react-glider-carousel';\r\n\r\n// custom hook\r\nimport useWindowSize from '../CustomHooks/useWindowSize'\r\n\r\n// component\r\nimport GliderItem from './GliderItem';\r\n\r\n// images (for demo)\r\n// in real project data comes from server:\r\nimport userAvatarA from '../../images/userAvatarA.png';\r\nimport userAvatarB from '../../images/userAvatarB.png';\r\nimport userAvatarC from '../../images/userAvatarC.png';\r\n\r\n// in real project data comes from server:\r\nconst SliderData = [\r\n    {\r\n        review: `Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.`,\r\n        clientPhoto: userAvatarA,\r\n        clientName: 'Adam',\r\n        clientJob: 'working as CEO'              \r\n    },\r\n    {\r\n        review: `Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.`,\r\n        clientPhoto: userAvatarB,\r\n        clientName: 'Elizabeth',\r\n        clientJob: 'working as Web Designer'              \r\n    },\r\n    {\r\n        review: `Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.`,\r\n        clientPhoto: userAvatarC,\r\n        clientName: 'Igor',\r\n        clientJob: 'working as cryptoinvestor'              \r\n    },\r\n    {\r\n        review: `Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.`,\r\n        clientPhoto: userAvatarA,\r\n        clientName: 'Adam',\r\n        clientJob: 'working as CEO'              \r\n    },\r\n    {\r\n        review: `Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.`,\r\n        clientPhoto: userAvatarB,\r\n        clientName: 'Elizabeth',\r\n        clientJob: 'working as Web Designer'              \r\n    },\r\n    {\r\n        review: `Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.`,\r\n        clientPhoto: userAvatarC,\r\n        clientName: 'Igor',\r\n        clientJob: 'working as cryptoinvestor'              \r\n    },\r\n    \r\n];\r\n\r\nconst SliderComponent = ({toAnimate}) => {\r\n    const size = useWindowSize();\r\n\r\n    return(\r\n        <section>\r\n            <GliderComponent\r\n                hasDots = {false}\r\n                settings={getGiderConfig(size)}\r\n            >\r\n                {\r\n                    SliderData.map( \r\n                        (item, i) => \r\n                            <GliderItem \r\n                                key = {i}\r\n                                i = {i}\r\n                                review = {item.review}\r\n                                clientPhoto = {item.clientPhoto}\r\n                                clientName = {item.clientName}\r\n                                clientJob = {item.clientJob}\r\n                                toAnimate = {toAnimate}\r\n                            />\r\n                    )\r\n                }\r\n            </GliderComponent>\r\n        </section>\r\n    )\r\n}\r\n\r\nconst getGiderConfig = ({width}) => (\r\n    {\r\n        slidesToShow: width <= 880? 1 : 3,\r\n        slidesToScroll: 1,\r\n        draggable: true,\r\n        itemWidth: 300\r\n    }\r\n);\r\n\r\nexport default SliderComponent;","import React, {useState} from 'react';\r\n\r\n//components:\r\nimport SliderComponent from '../SliderComponent/SliderComponent';\r\nimport CharComponent from '../CharComponent/CharComponent';\r\n\r\n//package:\r\nimport VisibilitySensor from 'react-visibility-sensor';\r\n\r\nconst title = `Our client reviews`;\r\n\r\nconst ClientsReviews = () => {\r\n    const [toAnimate, setToAnimate] = useState(false);\r\n\r\n    const IsItVisible = (isVisible) => \r\n        isVisible === undefined ? setToAnimate(false) : setToAnimate(isVisible);\r\n\r\n    const arr = Array.from(title);\r\n\r\n    return(\r\n        <VisibilitySensor onChange = {IsItVisible}>\r\n            <section className = \"ClientReviews\">\r\n                <h1 className=\"ClientReviewsHeader\">\r\n                    {arr.map((item, i) =>\r\n                        <CharComponent \r\n                            item = {item}\r\n                            key = {i}\r\n                            i = {i}\r\n                            toAnimate = {toAnimate}\r\n                        />\r\n                    )}\r\n                </h1>\r\n        \r\n                <SliderComponent toAnimate = {toAnimate}/>\r\n            </section>\r\n        </VisibilitySensor>\r\n    )\r\n};\r\n\r\nexport default ClientsReviews;","import React from 'react';\r\n\r\n//comoponent:\r\nimport CharComponent from '../CharComponent/CharComponent'\r\n\r\n//strings: \r\nconst formHeader = `Still have some questions?`;\r\nconst fromTitle = `Leave us your number and we will call you`;\r\n\r\nconst FormTextContent = ({isVisible}) => {\r\n    const arrHeader = Array.from(formHeader);\r\n    const arrTitle = Array.from(fromTitle);\r\n    \r\n    return(\r\n        <>\r\n            <h2 className = 'ContactFormHeader'>\r\n                {arrHeader.map((item, i) => \r\n                    <CharComponent \r\n                        item = {item}\r\n                        i = {i}\r\n                        key = {i}\r\n                        toAnimate = {isVisible}\r\n                    />\r\n                )}\r\n            </h2>\r\n\r\n            <p className = 'ContactFormTitle'>\r\n                {arrTitle.map((item, i) => \r\n                    <CharComponent \r\n                        item = {item}\r\n                        i = {i}\r\n                        key = {i}\r\n                        toAnimate = {isVisible}\r\n                    />\r\n                )}\r\n            </p>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default FormTextContent;","import React from 'react';\r\n\r\n//package: \r\nimport {useSpring, animated} from 'react-spring';\r\n\r\nconst FormForUser = ({isVisible}) => {\r\n    //animation setup:\r\n    const springConf = useSpring({\r\n        from: {opacity: isVisible ? 0 : 1},\r\n        to: {opacity: isVisible ? 1 : 0},\r\n        config: {duration: isVisible ? 250 : 0},\r\n        delay: 0\r\n    })\r\n    \r\n    return(\r\n        <animated.form style = {springConf} className = \"AwesomeFormBox\">\r\n            <input type = \"tel\" className = \"AwesomeFormInput\" defaultValue = \"+380 \"/>\r\n            <button type = \"submit\" className=\"AwesomeFormButton\"> </button>\r\n        </animated.form>\r\n    );\r\n};\r\n\r\nexport default FormForUser;","import React, {useState} from 'react';\r\n\r\n//package:\r\nimport VisibilitySensor from 'react-visibility-sensor';\r\n\r\n// components:\r\nimport FormTextContent from './FormTextContent';\r\nimport FormForUser from './FormForUser';\r\n\r\nconst ContactForm = () => {\r\n    return(\r\n        <VisibilitySensor partialVisibility = {true}>\r\n            { \r\n                ({isVisible}) => (\r\n                    <section className = 'ContactForm'>\r\n                            <FormTextContent isVisible = {isVisible}/>\r\n                            <FormForUser isVisible = {isVisible}/>\r\n                    </section>\r\n                )\r\n            }\r\n        </VisibilitySensor>\r\n    )\r\n};\r\n\r\nexport default ContactForm;","import React, { Fragment } from 'react';\r\n\r\n//Components\r\nimport HeaderComponent from \"../HeaderComponent/HeaderComponent\";\r\nimport OurAdvantages from \"../OurAdvantages/OurAdvantages\";\r\nimport HowItWorks from \"../HowItWorks/HowItWorks\";\r\nimport MiningPlan from \"../MiningPlan/MiningPlan\";\r\nimport ClientsReviews from \"../ClientsReviews/ClientsReviews\"\r\nimport ContactForm from \"../ContactForm/ContactForm\";\r\n\r\nconst LightApp = ({lightTheme}) => {  \r\n    return (\r\n        <Fragment>\r\n            <HeaderComponent />\r\n\r\n            <section className = {lightTheme ? 'app' : 'appDarkTheme'}>\r\n\r\n                <OurAdvantages/>\r\n\r\n                <HowItWorks/>\r\n\r\n                <MiningPlan/>\r\n\r\n                <ClientsReviews />\r\n\r\n                <ContactForm/>\r\n            </section>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default LightApp;","//packages:\r\nimport React, { Fragment } from 'react';\r\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom'\r\n\r\n//styles:\r\nimport './css/main.css'\r\n\r\n//components:\r\nimport {Info} from './Components/ContextAPI/Info';\r\nimport Consumer from './Components/ContextAPI/Info';\r\nimport ThemeTrigger from './Components/ThemeTrigger/ThemeTrigger';\r\nimport LightApp from './Components/LightApp/LightApp';\r\n\r\nconst App = () => {\r\n    return(\r\n        <Router>\r\n            <Info>\r\n                <Switch>\r\n                    <Route path = '/' render = { () => (\r\n                        <Fragment>        \r\n                            <ThemeTrigger/>\r\n                                    \r\n                            <Consumer>\r\n                                { context => \r\n                                    <LightApp \r\n                                        lightTheme = {context.lightTheme}\r\n                                    />\r\n                                }\r\n                            </Consumer>\r\n                        </Fragment>\r\n                    ) }/>\r\n                </Switch>                \r\n            </Info>\r\n        </Router>  \r\n    )\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}